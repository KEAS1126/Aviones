// <auto-generated />
using System;
using Clientes.WEB.Models.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Clientes.WEB.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Clientes.WEB.Models.Entities.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(90)")
                        .HasColumnName("CorreoElectronico'");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(90)")
                        .HasColumnName("DireccionHogar'");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("DocumentoIdentidad");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("DateTime")
                        .HasColumnName("FechaActualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("DateTime")
                        .HasColumnName("FechaCreacion");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("Date")
                        .HasColumnName("FechaNacimiento'");

                    b.Property<int?>("HistorialCorporalIdHistorialesCorporal")
                        .HasColumnType("int");

                    b.Property<int>("IdHistorialesCorporal")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NombreCliente");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("NumeroTelefono'");

                    b.HasKey("IdCliente");

                    b.HasIndex("HistorialCorporalIdHistorialesCorporal");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Clientes.WEB.Models.Entities.HistorialCorporal", b =>
                {
                    b.Property<int>("IdHistorialesCorporal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("DateTime")
                        .HasColumnName("FechaCreación'");

                    b.Property<string>("NombreDoctor")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NombreDoctor");

                    b.Property<string>("Tratamiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(700)")
                        .HasColumnName("Tratamiento");

                    b.HasKey("IdHistorialesCorporal");

                    b.ToTable("historialCorporal");
                });

            modelBuilder.Entity("Clientes.WEB.Models.Entities.Cliente", b =>
                {
                    b.HasOne("Clientes.WEB.Models.Entities.HistorialCorporal", "HistorialCorporal")
                        .WithMany()
                        .HasForeignKey("HistorialCorporalIdHistorialesCorporal");

                    b.Navigation("HistorialCorporal");
                });
#pragma warning restore 612, 618
        }
    }
}
